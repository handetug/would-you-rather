{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/QuestionPoll.js\";\nimport React, { Component } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport ErrorPage from './errorpage';\nimport Login from './login';\nimport { connect } from 'react-redux';\n\nclass QuestionPoll extends Component {\n  render() {\n    const _this$props = this.props,\n          isError = _this$props.isError,\n          isAnswered = _this$props.isAnswered,\n          id = _this$props.id,\n          authedUser = _this$props.authedUser;\n\n    if (authedUser === null) {\n      return React.createElement(Login, {\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    } // This If-Else logic created to handle init time of questions array to store. It occurs only when refresh \"/questions:id\" URL.\n\n\n    if (isError && isAnswered === null) {\n      return React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else if (isAnswered !== null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser\n}, props) {\n  const id = props.match.params.id;\n  const question = questions[id];\n  return {\n    isError: Object.entries(questions).length !== 0,\n    isAnswered: question ? question.optionOne.votes.includes(authedUser) || question.optionTwo.votes.includes(authedUser) : null,\n    id,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPoll);","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/QuestionPoll.js"],"names":["React","Component","Question","Result","ErrorPage","Login","connect","QuestionPoll","render","props","isError","isAnswered","id","authedUser","mapStateToProps","questions","match","params","question","Object","entries","length","optionOne","votes","includes","optionTwo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEpCO,EAAAA,MAAM,GAAG;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACKC,OADL,eACKA,OADL;AAAA,UACcC,UADd,eACcA,UADd;AAAA,UAC0BC,EAD1B,eAC0BA,EAD1B;AAAA,UAC8BC,UAD9B,eAC8BA,UAD9B;;AAGR,QAAIA,UAAU,KAAK,IAAnB,EAAyB;AAClB,aAAO,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KALC,CAOH;;;AACA,QAAIF,OAAO,IAAIC,UAAU,KAAK,IAA9B,EAAoC;AAClC,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAFF,MAGK,IAAIA,UAAU,KAAK,IAAnB,EAAyB;AAC5B,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAOA,KARG,MASH;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACA;AACJ;;AAzBgC;;AA4BrC,SAASG,eAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaF,EAAAA;AAAb,CAA1B,EAAqDJ,KAArD,EAA6D;AAAA,QAClDG,EADkD,GAC3CH,KAAK,CAACO,KAAN,CAAYC,MAD+B,CAClDL,EADkD;AAE1D,QAAMM,QAAQ,GAAGH,SAAS,CAACH,EAAD,CAA1B;AAEA,SAAO;AACHF,IAAAA,OAAO,EAAES,MAAM,CAACC,OAAP,CAAeL,SAAf,EAA0BM,MAA1B,KAAqC,CAD3C;AAEHV,IAAAA,UAAU,EAAEO,QAAQ,GACfA,QAAQ,CAACI,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCX,UAAlC,KACAK,QAAQ,CAACO,SAAT,CAAmBF,KAAnB,CAAyBC,QAAzB,CAAkCX,UAAlC,CAFe,GAGN,IALX;AAMHD,IAAAA,EANG;AAOHC,IAAAA;AAPG,GAAP;AASF;;AAED,eAAeP,OAAO,CAACQ,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport ErrorPage from './errorpage';\nimport Login from './login';\nimport { connect } from 'react-redux';\n\nclass QuestionPoll extends Component {\n  \n\trender() {\n      \tconst { isError, isAnswered, id, authedUser } = this.props;\n\n\t\tif (authedUser === null) {\n        \treturn <Login id={id} />\n        }\n      \n      \t// This If-Else logic created to handle init time of questions array to store. It occurs only when refresh \"/questions:id\" URL.\n      \tif (isError && isAnswered === null) {\n        \treturn(<ErrorPage />) \n        } \n      \telse if (isAnswered !== null) {\n        \treturn(\n              <div>\n                  {/* {!isAnswered\n                      ? ( <Question id={id} /> )\n                      : ( <Result id={id} /> )} */}\n              </div>\n        \t)\n        }\n  \t\telse {\n        \treturn (<div>Loading...</div>)\n        }\n    }\n}\n\nfunction mapStateToProps ({ questions, authedUser }, props ) {\n  \tconst { id } = props.match.params;\n  \tconst question = questions[id];\n  \n  \treturn {\n      \tisError: Object.entries(questions).length !== 0,\n      \tisAnswered: question\n      \t\t\t\t? question.optionOne.votes.includes(authedUser) || \n      \t\t\t\t  question.optionTwo.votes.includes(authedUser)\n                  \t: null,\n      \tid,\n      \tauthedUser,\n    }\n}\n\nexport default connect(mapStateToProps)(QuestionPoll);"]},"metadata":{},"sourceType":"module"}