{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answered: false\n    };\n\n    this.handleUnansweredQuestions = e => {\n      e.preventDefault();\n      this.setState({\n        answered: false\n      });\n    };\n\n    this.handleAnsweredQuestions = e => {\n      e.preventDefault();\n      this.setState({\n        answered: true\n      });\n    };\n\n    this.handleViewPool = (e, id) => {\n      e.preventDefault();\n      this.props.history.push(\"/questions/\".concat(id));\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          answeredQuestions = _this$props.answeredQuestions,\n          unansweredQuestions = _this$props.unansweredQuestions,\n          users = _this$props.users,\n          authedUser = _this$props.authedUser;\n    const answered = this.state.answered;\n    let questionList = unansweredQuestions;\n\n    if (authedUser === null) {\n      return React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }); // user must be login\n    }\n\n    if (answered) {\n      questionList = answeredQuestions;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"home-container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"home-ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: !answered ? 'bg-header home-header-uns-li' : 'home-header-uns-li',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleUnansweredQuestions,\n      className: !answered ? 'home-btn-questions home-uns-questions home-header-btn-active' : 'home-btn-questions home-uns-questions',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Unanswered Questions\")), React.createElement(\"div\", {\n      className: answered ? 'bg-header home-header-ans-li' : 'home-header-ans-li',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: answered ? 'home-btn-questions home-ans-questions home-header-btn-active' : 'home-btn-questions home-ans-questions',\n      onClick: this.handleAnsweredQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Answered Questions\"))), React.createElement(\"hr\", {\n      className: \"hr-home-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, questionList.map(question => React.createElement(\"div\", {\n      key: question.id,\n      className: \"question-poll-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-header question-poll-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, users[question.author].name, \" asks:\"), React.createElement(\"div\", {\n      className: \"in-block-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: users[question.author].id,\n      src: users[question.author].avatarURL,\n      className: \"question-poll-img center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"in-block-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"question-poll-header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Would you rather\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"question-poll-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, question.optionOne.text), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"view-pool-btn\",\n      onClick: e => this.handleViewPool(e, question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"View Poll\"))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}) {\n  return {\n    answeredQuestions: Object.values(questions).filter(qid => qid.optionOne.votes.includes(authedUser) || qid.optionTwo.votes.includes(authedUser)).sort((a, b) => b.timestamp - a.timestamp),\n    unansweredQuestions: Object.values(questions).filter(qid => !qid.optionOne.votes.includes(authedUser) && !qid.optionTwo.votes.includes(authedUser)).sort((a, b) => b.timestamp - a.timestamp),\n    users,\n    authedUser //set user \n\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Home));","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/Home.js"],"names":["React","Component","connect","withRouter","Login","Home","state","answered","handleUnansweredQuestions","e","preventDefault","setState","handleAnsweredQuestions","handleViewPool","id","props","history","push","render","answeredQuestions","unansweredQuestions","users","authedUser","questionList","map","question","author","name","avatarURL","optionOne","text","mapStateToProps","questions","Object","values","filter","qid","votes","includes","optionTwo","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nclass Home extends Component {\n  \tstate={\n    \tanswered: false,\n    }\n\n\t//set unanswer the question\n\thandleUnansweredQuestions = (e) => {\n      \te.preventDefault();\n      \n    \tthis.setState({\n          answered: false,\n        });\n    }\n\n\t//set answers the question\n\thandleAnsweredQuestions = (e) => {\n        e.preventDefault();\n      \n    \tthis.setState({\n          answered: true,\n        });\n    }\n\n\thandleViewPool = (e, id) => {\n    \te.preventDefault();\n      \n      \tthis.props.history.push(`/questions/${id}`)\n    }\n  \n\trender () {\n      \tconst { answeredQuestions, unansweredQuestions, users, authedUser } = this.props;\n\t\tconst { answered } = this.state;\n\n\t\tlet questionList = unansweredQuestions;\n\n\t\n\t\tif (authedUser === null) {\n        \treturn <Login /> // user must be login\n        }\n\n\t\tif (answered) {\n        \tquestionList = answeredQuestions;\n        }\n\n    \treturn (\n        \t<div className='home-container center' >\n          \t\t<div className='home-ul'>\n          \t\t\t<div \n          \t\t\t\tclassName={ !answered ? 'bg-header home-header-uns-li' : 'home-header-uns-li' } >\n             \t\t\t<button \n             \t\t\t\tonClick={this.handleUnansweredQuestions}\n\t\t\t\t\t\t\tclassName={!answered \n                                        \t? 'home-btn-questions home-uns-questions home-header-btn-active' \n                                        \t: 'home-btn-questions home-uns-questions' } >\n             \t\t\t\tUnanswered Questions\n             \t\t\t</button>\n          \t\t\t</div>\n             \t\t<div \n\t\t\t\t\t\tclassName={answered ? 'bg-header home-header-ans-li' : 'home-header-ans-li' } >\n             \t\t\t<button \n\t\t\t\t\t\t\tclassName={answered \n                                       ? 'home-btn-questions home-ans-questions home-header-btn-active' \n                                       : 'home-btn-questions home-ans-questions' }\n      \t\t\t\t\t\tonClick={this.handleAnsweredQuestions} >\n             \t\t\t\tAnswered Questions\n             \t\t\t</button>\n          \t\t\t</div>\n          \t\t</div>\n\t\t\t\t<hr className='hr-home-color' />\n\t\t\t\t<div>\n\t\t\t\t\t{questionList.map(question => (\n                     \t<div key={question.id} className='question-poll-container' >\n                          <div className='bg-header question-poll-header'>\n                     \t\t\t{users[question.author].name} asks:\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div className='in-block-left' >\n\t\t\t\t\t\t\t<img \n                             \talt={users[question.author].id}\n                                src={users[question.author].avatarURL} \n                                className='question-poll-img center' />\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div className='in-block-right' >\n                              <span className='question-poll-header-text'>Would you rather</span>\n\t\t\t\t\t\t\t  <br /> <br />\n\t\t\t\t\t\t\t  <span className='question-poll-text'>\n\t\t\t\t\t\t\t   {question.optionOne.text} \n\t\t\t\t\t\t\t  </span>\n\t\t\t\t\t\t\t  <br />\n                              <button \n\t\t\t\t\t\t\t\tclassName='view-pool-btn'\n\t\t\t\t\t\t\t\tonClick={(e) => this.handleViewPool(e,question.id)}\n\t\t\t\t\t\t\t  >\n                                  View Poll\n                              </button>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</div>\n                     ))}\n\t\t\t\t</div>\n          \t</div>\n        );\n    }\n}\n\nfunction mapStateToProps ({ questions, users, authedUser }) {\n  \treturn {\n      \tansweredQuestions: Object.values(questions).filter(qid => qid.optionOne.votes.includes(authedUser) \n                                                           || qid.optionTwo.votes.includes(authedUser))\n      \t\t\t\t\t\t\t\t\t\t\t\t\t   .sort((a,b) => b.timestamp - a.timestamp),\n        unansweredQuestions: Object.values(questions).filter(qid => !qid.optionOne.votes.includes(authedUser) \n                                                           && !qid.optionTwo.votes.includes(authedUser))\n      \t\t\t\t\t\t\t\t\t\t\t\t\t   .sort((a,b) => b.timestamp - a.timestamp),\n      \tusers,\n    \tauthedUser, //set user \n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Home));"]},"metadata":{},"sourceType":"module"}