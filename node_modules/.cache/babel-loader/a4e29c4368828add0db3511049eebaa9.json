{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/leaderBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport Card from './Card';\n\nclass Leaderboard extends Component {\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          authedUser = _this$props.authedUser;\n\n    if (authedUser === null) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, list.map(user => React.createElement(Card, {\n      user: user,\n      key: user.id,\n      divClass: \"col-md-4\",\n      title: \"\".concat(user.name),\n      firstText: \"Questions: \" + \"\".concat(user.questionsCount),\n      secondText: \"Answered: \" + \"\".concat(user.answersCount),\n      thirdText: \"Score: \" + \"\".concat(user.answersCount + user.questionsCount),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users\n}) {\n  return {\n    authedUser,\n    list: Object.keys(users).map(userId => {\n      return {\n        id: users[userId].id,\n        name: users[userId].name,\n        avatar: users[userId].avatarURL,\n        questionsCount: users[userId].questions.length,\n        answersCount: Object.keys(users[userId].answers).length\n      };\n    }).sort(function (a, b) {\n      return b.questionsCount + b.answersCount - (a.questionsCount + a.answersCount);\n    })\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Leaderboard));","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/leaderBoard.js"],"names":["React","Component","connect","withRouter","Redirect","Card","Leaderboard","render","props","list","authedUser","map","user","id","name","questionsCount","answersCount","mapStateToProps","users","Object","keys","userId","avatar","avatarURL","questions","length","answers","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,UADP,eACOA,UADP;;AAEP,QAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,IAAI,CAACE,GAAL,CAAUC,IAAD,IACT,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AACA,MAAA,GAAG,EAAEA,IAAI,CAACC,EADV;AAEA,MAAA,QAAQ,EAAC,UAFT;AAGA,MAAA,KAAK,YAAKD,IAAI,CAACE,IAAV,CAHL;AAIA,MAAA,SAAS,EAAE,0BAAiBF,IAAI,CAACG,cAAtB,CAJX;AAKA,MAAA,UAAU,EAAE,yBAAgBH,IAAI,CAACI,YAArB,CALZ;AAMA,MAAA,SAAS,EAAE,sBAAaJ,IAAI,CAACI,YAAL,GAAoBJ,IAAI,CAACG,cAAtC,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADF;AAYE;;AAlB8B;;AAqBpC,SAASE,eAAT,CAA0B;AAAEP,EAAAA,UAAF;AAAcQ,EAAAA;AAAd,CAA1B,EAAiD;AAC/C,SAAO;AACLR,IAAAA,UADK;AAELD,IAAAA,IAAI,EAACU,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBP,GAAnB,CAAwBU,MAAD,IAAU;AAClC,aAAM;AACJR,QAAAA,EAAE,EAAEK,KAAK,CAACG,MAAD,CAAL,CAAcR,EADd;AAEJC,QAAAA,IAAI,EAAEI,KAAK,CAACG,MAAD,CAAL,CAAcP,IAFhB;AAGJQ,QAAAA,MAAM,EAAEJ,KAAK,CAACG,MAAD,CAAL,CAAcE,SAHlB;AAIJR,QAAAA,cAAc,EAAEG,KAAK,CAACG,MAAD,CAAL,CAAcG,SAAd,CAAwBC,MAJpC;AAKJT,QAAAA,YAAY,EAAEG,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,MAAD,CAAL,CAAcK,OAA1B,EAAmCD;AAL7C,OAAN;AAME,KAPD,EAQAE,IARA,CAQK,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpB,aAAQA,CAAC,CAACd,cAAF,GAAmBc,CAAC,CAACb,YAAtB,IAAuCY,CAAC,CAACb,cAAF,GAAmBa,CAAC,CAACZ,YAA5D,CAAP;AACD,KAVA;AAFA,GAAP;AAcD;;AAED,eAAeb,UAAU,CAACD,OAAO,CAACe,eAAD,CAAP,CAAyBX,WAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom'\nimport Card from './Card'\n\nclass Leaderboard extends Component {\n  render() {\n    const { list, authedUser } = this.props \n    if (authedUser === null) {\n      return <Redirect to='/login' />\n    }\n    return (\n      <div className=\"row\">\n      { list.map((user) => (\n        <Card user={user} \n        key={user.id} \n        divClass=\"col-md-4\"\n        title={`${user.name}`} \n        firstText={\"Questions: \"+`${user.questionsCount}`}\n        secondText={\"Answered: \"+`${user.answersCount}`}\n        thirdText={\"Score: \"+`${user.answersCount + user.questionsCount}`}></Card>\n      ))}\n    </div>\n    )}\n}\n\nfunction mapStateToProps ({ authedUser, users }) {\n  return {\n    authedUser,\n    list:Object.keys(users).map((userId)=>{\n        return{\n          id: users[userId].id,\n          name: users[userId].name,\n          avatar: users[userId].avatarURL,\n          questionsCount: users[userId].questions.length,\n          answersCount: Object.keys(users[userId].answers).length\n        }})\n        .sort(function (a, b) {\n          return (b.questionsCount + b.answersCount) - (a.questionsCount + a.answersCount)\n        })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Leaderboard))"]},"metadata":{},"sourceType":"module"}