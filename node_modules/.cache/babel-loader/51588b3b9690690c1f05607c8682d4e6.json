{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Progress } from 'react-sweet-progress';\n\nclass Result extends Component {\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          author = _this$props.author,\n          answer = _this$props.answer; //let { optionOneCount, optionTwoCount, totalCount, optionOnePercentage, optionTwoPercentage } = 0;\n\n    const optionOneCount = question.optionOne.votes.length;\n    const optionTwoCount = question.optionTwo.votes.length;\n    const totalCount = optionOneCount + optionTwoCount;\n    const optionOnePercentage = Math.round(optionOneCount / totalCount * 100);\n    const optionTwoPercentage = Math.round(optionTwoCount / totalCount * 100);\n    return React.createElement(\"div\", {\n      className: \"home-container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-header question-poll-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Asked by \", author.name), React.createElement(\"hr\", {\n      className: \"hr-home-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"in-block-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: author.id,\n      src: author.avatarURL,\n      className: \"question-author-img center result-author-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"in-block-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"question-header mb-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Results:\"), React.createElement(\"div\", {\n      className: answer === 'optionOne' ? 'result-block bg-header result-selected-block' : 'result-block bg-header',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, answer === 'optionOne' && React.createElement(\"div\", {\n      className: \"result-choice center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Your vote\"), React.createElement(\"span\", {\n      className: \"fs-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Would you rather \", question.optionOne.text, \"?\"), React.createElement(Progress, {\n      percent: optionOnePercentage,\n      className: \"mt-10\",\n      theme: {\n        success: {\n          symbol: optionOnePercentage + '%',\n          color: '#58D99B'\n        },\n        active: {\n          color: '#58D99B',\n          trailColor: '#B7B9B8'\n        },\n        default: {\n          symbol: optionOnePercentage + '%',\n          trailColor: '#B7B9B8'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"result-total-votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, optionOneCount, \" out of \", totalCount, \" votes\")), React.createElement(\"div\", {\n      className: answer === 'optionTwo' ? 'result-block bg-header result-selected-block' : 'result-block bg-header',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, answer === 'optionTwo' && React.createElement(\"div\", {\n      className: \"result-choice center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Your vote\"), React.createElement(\"span\", {\n      className: \"fs-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Would you rather \", question.optionTwo.text, \"?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Progress, {\n      percent: optionTwoPercentage,\n      className: \"mt-10\",\n      theme: {\n        success: {\n          symbol: optionTwoPercentage + '%',\n          color: '#58D99B'\n        },\n        active: {\n          color: '#58D99B',\n          trailColor: '#B7B9B8'\n        },\n        default: {\n          symbol: optionTwoPercentage + '%',\n          trailColor: '#B7B9B8'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"result-total-votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, optionTwoCount, \" out of \", totalCount, \" votes\"))));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  return {\n    question: questions[id],\n    author: users[questions[id].author],\n    answer: users[authedUser].answers[id]\n  };\n}\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/Result.js"],"names":["React","Component","connect","Progress","Result","render","props","question","author","answer","optionOneCount","optionOne","votes","length","optionTwoCount","optionTwo","totalCount","optionOnePercentage","Math","round","optionTwoPercentage","name","id","avatarURL","text","success","symbol","color","active","trailColor","default","mapStateToProps","questions","users","authedUser","answers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Progress } from 'react-sweet-progress';\n\nclass Result extends Component {\n\trender() {\n      const { question, author, answer } = this.props;\n      //let { optionOneCount, optionTwoCount, totalCount, optionOnePercentage, optionTwoPercentage } = 0;\n\t  \n      const optionOneCount = question.optionOne.votes.length;\n      const optionTwoCount = question.optionTwo.votes.length;\n      const totalCount = optionOneCount + optionTwoCount;\n      const optionOnePercentage = Math.round(( optionOneCount / totalCount ) * 100);\n      const optionTwoPercentage = Math.round(( optionTwoCount / totalCount ) * 100);\n      \n    \treturn(\n        \t<div className='home-container center'>\n          \t\t<div className='bg-header question-poll-header'>\n          \t\t\tAsked by {author.name}\n          \t\t</div>\n\t\t\t\t<hr className='hr-home-color' />\n\t\t\t\t<div className='in-block-left'>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={author.id}\n\t\t\t\t\t\tsrc={author.avatarURL}\n\t\t\t\t\t\tclassName='question-author-img center result-author-img'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='in-block-right'>\n\t\t\t\t\t<h2 className='question-header mb-15'>Results:</h2>\n\t\t\t\t\t<div className={answer === 'optionOne' \n                                        \t? 'result-block bg-header result-selected-block' \n                                        \t: 'result-block bg-header' } >\n\n\t\t\t\t\t\t{answer === 'optionOne' && <div className='result-choice center'>Your vote</div>}\n\t\t\t\t\t\t<span className='fs-15'>Would you rather {question.optionOne.text}?</span>\n\t\t\t\t\n\t\t\t\t\t\t<Progress percent={optionOnePercentage} className='mt-10'\n\t\t\t\t\t\t\ttheme={{\n                            success: {\n                              symbol: optionOnePercentage + '%',\n                              color: '#58D99B'\n                            },\n                            active: {\n                              color: '#58D99B',\n                              trailColor: '#B7B9B8'\n                            },\n\t\t\t\t\t\t\tdefault: {\n                              symbol: optionOnePercentage + '%',\n                              trailColor: '#B7B9B8'\n                            }\n                          }}\n                        />\n\t\t\t\t\t\t<div className='result-total-votes'>{optionOneCount} out of {totalCount} votes</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={answer === 'optionTwo' \n                                        \t? 'result-block bg-header result-selected-block' \n                                        \t: 'result-block bg-header' } >\n\n\t\t\t\t\t\t{answer === 'optionTwo' && <div className='result-choice center'>Your vote</div>}\n\t\t\t\t\t\t<span className='fs-15'>Would you rather {question.optionTwo.text}?</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Progress percent={optionTwoPercentage} className='mt-10'\n\t\t\t\t\t\t\ttheme={{\n                            success: {\n                              symbol: optionTwoPercentage + '%',\n                              color: '#58D99B'\n                            },\n                            active: {\n                              color: '#58D99B',\n                              trailColor: '#B7B9B8'\n                            },\n\t\t\t\t\t\t\tdefault: {\n                              symbol: optionTwoPercentage + '%',\n                              trailColor: '#B7B9B8'\n                            }\n                          }}\n                        />\n\t\t\t\t\t\t<div className='result-total-votes'>{optionTwoCount} out of {totalCount} votes</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n          \t</div>\n        )\n    }\n}\n\nfunction mapStateToProps ({ questions, users, authedUser}, { id }) {\n\treturn {\n    \tquestion: questions[id],\n      \tauthor: users[questions[id].author],\n        answer: users[authedUser].answers[id]\n        \n    }\n}\n\nexport default connect(mapStateToProps)(Result);"]},"metadata":{},"sourceType":"module"}