{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/home.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport QuestionItemHome from \"./QuestionItemHome\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTab: \"unanswered\"\n    };\n\n    this.onSelect = eventKey => {\n      this.setState({\n        selectedTab: eventKey\n      });\n    };\n  }\n\n  render() {\n    const selectedTab = this.state.selectedTab;\n    const _this$props = this.props,\n          answeredQuestionIds = _this$props.answeredQuestionIds,\n          unAnsweredQuestionIds = _this$props.unAnsweredQuestionIds;\n    let questions = [];\n\n    if (selectedTab === \"unanswered\") {\n      questions = unAnsweredQuestionIds;\n    } else if (selectedTab === \"answered\") {\n      questions = answeredQuestionIds;\n    }\n\n    const listItems = questions.map(question => {\n      return React.createElement(QuestionItemHome, {\n        key: question,\n        id: question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"full-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"unanswered\",\n      onSelect: this.onSelect,\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"unanswered\",\n      title: \"Unanswered Questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      eventKey: \"answered\",\n      title: \"Answered Questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, listItems));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}) {\n  const answers = users[authedUser].answers;\n  const answeredQuestionIds = Object.keys(answers).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const questionIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const unAnsweredQuestionIds = questionIds.filter(id => answers[id] === undefined);\n  return {\n    answeredQuestionIds: answeredQuestionIds,\n    unAnsweredQuestionIds: unAnsweredQuestionIds\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/home.js"],"names":["React","Component","connect","Tab","Tabs","QuestionItemHome","Home","state","selectedTab","onSelect","eventKey","setState","render","props","answeredQuestionIds","unAnsweredQuestionIds","questions","listItems","map","question","mapStateToProps","users","authedUser","answers","Object","keys","sort","a","b","timestamp","questionIds","filter","id","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport QuestionItemHome from \"./QuestionItemHome\";\n\nclass Home extends Component {\n  state = {\n    selectedTab: \"unanswered\"\n  };\n\n  onSelect = eventKey => {\n    this.setState({\n      selectedTab: eventKey\n    });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n    const { answeredQuestionIds, unAnsweredQuestionIds } = this.props;\n    let questions = [];\n\n    if (selectedTab === \"unanswered\") {\n      questions = unAnsweredQuestionIds;\n    } else if (selectedTab === \"answered\") {\n      questions = answeredQuestionIds;\n    }\n\n    const listItems = questions.map(question => {\n      return <QuestionItemHome key={question} id={question} />;\n    });\n\n    return (\n      <div className=\"full-width\">\n        <Tabs\n          defaultActiveKey=\"unanswered\"\n          onSelect={this.onSelect}\n          className=\"justify-content-md-center\"\n        >\n          <Tab eventKey=\"unanswered\" title=\"Unanswered Questions\" />\n          <Tab eventKey=\"answered\" title=\"Answered Questions\" />\n        </Tabs>\n        <ul>{listItems}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ questions, users, authedUser }) {\n  const answers = users[authedUser].answers;\n  const answeredQuestionIds = Object.keys(answers).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  );\n\n  const questionIds = Object.keys(questions).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  );\n  const unAnsweredQuestionIds = questionIds.filter(\n    id => answers[id] === undefined\n  );\n\n  return {\n    answeredQuestionIds: answeredQuestionIds,\n    unAnsweredQuestionIds: unAnsweredQuestionIds\n  };\n}\n\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}