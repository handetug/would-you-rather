{"ast":null,"code":"var _jsxFileName = \"/Users/fordotosandevteam/would-you-rather-app/src/components/leaderBoard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport LeaderBoardItem from \"./LeaderBoardItem\";\nimport Login from './login';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass LeaderBoard extends Component {\n  render() {\n    const _this$props = this.props,\n          sortedUsers = _this$props.sortedUsers,\n          loginControl = _this$props.loginControl;\n\n    if (!loginControl) {\n      return React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n\n    const users = sortedUsers.map(id => {\n      return React.createElement(LeaderBoardItem, {\n        userId: id,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, users));\n  }\n\n}\n\nfunction mapStateToProps({\n  users,\n  authedUser\n}) {\n  let sortedUsers = Object.keys(users).sort((a, b) => {\n    return Object.keys(users[b].answers).length + users[b].questions.length - (Object.keys(users[a].answers).length + users[a].questions.length);\n  });\n  return {\n    sortedUsers,\n    loginControl: authedUser !== null\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);","map":{"version":3,"sources":["/Users/fordotosandevteam/would-you-rather-app/src/components/leaderBoard.js"],"names":["React","Component","connect","LeaderBoardItem","Login","LeaderBoard","render","props","sortedUsers","loginControl","users","map","id","width","mapStateToProps","authedUser","Object","keys","sort","a","b","answers","length","questions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kCAAP;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACeC,YADf,eACeA,YADf;;AAGP,QAAI,CAACA,YAAL,EAAmB;AACpB,aAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AAEC,UAAMC,KAAK,GAAGF,WAAW,CAACG,GAAZ,CAAgBC,EAAE,IAAI;AAClC,aAAO,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEA,EAAzB;AAA6B,QAAA,GAAG,EAAEA,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFa,CAAd;AAIA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,KAAL,CADF,CADF;AAKD;;AAjBiC;;AAoBpC,SAASI,eAAT,CAAyB;AAAEJ,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAzB,EAAgD;AAC9C,MAAIP,WAAW,GAAGQ,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClD,WACEJ,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACU,CAAD,CAAL,CAASC,OAArB,EAA8BC,MAA9B,GACAZ,KAAK,CAACU,CAAD,CAAL,CAASG,SAAT,CAAmBD,MADnB,IAECN,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACS,CAAD,CAAL,CAASE,OAArB,EAA8BC,MAA9B,GAAuCZ,KAAK,CAACS,CAAD,CAAL,CAASI,SAAT,CAAmBD,MAF3D,CADF;AAKD,GANiB,CAAlB;AAOA,SAAO;AACLd,IAAAA,WADK;AAELC,IAAAA,YAAY,EAAEM,UAAU,KAAK;AAFxB,GAAP;AAID;;AAED,eAAeb,OAAO,CAACY,eAAD,CAAP,CAAyBT,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport LeaderBoardItem from \"./LeaderBoardItem\";\nimport Login from './login';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nclass LeaderBoard extends Component {\n  render() {\n    const { sortedUsers , loginControl} = this.props;\n    \n    if (!loginControl) { \n\t\t\treturn <Login/>\n\t\t}\n\n    const users = sortedUsers.map(id => {\n      return <LeaderBoardItem userId={id} key={id} />;\n    });\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <ul>{users}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ users, authedUser }) {\n  let sortedUsers = Object.keys(users).sort((a, b) => {\n    return (\n      Object.keys(users[b].answers).length +\n      users[b].questions.length -\n      (Object.keys(users[a].answers).length + users[a].questions.length)\n    );\n  });\n  return {\n    sortedUsers,\n    loginControl: authedUser !== null\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);"]},"metadata":{},"sourceType":"module"}